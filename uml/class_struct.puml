@startuml
class DDynamicReconfigure {
    #nh_ : NodeHandle
    #params_ : ParamMap
    #info_pub_ : Publisher
    #value_pub_ : Publisher
    -callback_ : shared_ptr<ReconfigureFunction>
    -set_service_ : ServiceServer
    __
    +add() : void
    +remove(): void
    +setCallback() : void
    +clearCallback() : void
    +start() : void
    ..getters..
    +get() : Value
    +at() : ParamPtr
    +operator<<() : ostream&
    ..internal..
    #makeInfo() : void
    #makeValues() : void
    #{static} internalCallback() : bool
    -reassignValue() <<T>> : int
    -update() : int
}
note right: ParamPtr := shared_ptr<Param>\nDDMap := map<string,ParamPtr>\nDDFunc := function<void(const ParamMap&,int)>
class DDValue {
    -int_val_ : int
    -double_val_ : double
    -bool_val_ : bool
    -str_val_ : string
    -type_ : string
    +getType() : string
    +toInt() : int
    +toDouble() : double
    +toBool() : bool
    +toString() : string
}
package dd_param <<Rectangle>> {
    interface Param {
        __
        +{abstract} getName() : string
        +{abstract} getLevel() : u_int
        +{abstract} getValue() : DDValue
        +operator<<() : ostream&
        ..setters..
        +{abstract} setValue() : void
        ..testers..
        +{abstract} sameType() : bool
        +{abstract} sameValue() : bool
        ..internal..
        +{abstract} prepInfo() : void
        +{abstract} prepValue() : void
    }
    class IntParam {
        #level_ : u_int
        #name_ : string
        #desc_ : string
        #def_ : int
        #val_ : int
        #max_ : int
        #min_ : int
    }
    class DoubleParam {
        #level_ : u_int
        #name_ : string
        #desc_ : string
        #def_ : double
        #val_ : double
        #max_ : double
        #min_ : double
    }
    class BoolParam {
        #level_ : u_int
        #name_ : string
        #desc_ : string
        #def_ : bool
        #val_ : bool
    }
    class StringParam {
        #level_ : u_int
        #name_ : string
        #desc_ : string
        #def_ : string
        #val_ : string
    }
    class EnumParam {
      #dict_ : const map<string,pair<int,string> >
      #enum_description_ : string
      -lookup() : int
      -makeEditMethod() : string
      -makeConst() : string
    }
}

Param .> DDValue
IntParam .u.|> Param
DoubleParam .u.|> Param
BoolParam .u.|> Param
StringParam .u.|> Param
EnumParam -u-|> IntParam
DDynamicReconfigure "0..*" --o Param
@enduml